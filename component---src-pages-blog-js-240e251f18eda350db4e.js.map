{"version":3,"file":"component---src-pages-blog-js-240e251f18eda350db4e.js","mappings":";gGAAA,OAOC,WACA,aAEA,IAAIA,EAAS,CAAC,EAAEC,eAGhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,EAEf,OACM,GAAgB,WAAZJ,EAAsB,CAChC,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,WAAaP,EAAIO,SAASA,WAAWG,SAAS,iBAAkB,CACrGd,EAAQM,KAAKF,EAAIO,YACjB,QACD,CAEA,IAAK,IAAII,KAAOX,EACXP,EAAOmB,KAAKZ,EAAKW,IAAQX,EAAIW,IAChCf,EAAQM,KAAKS,EAGhB,CAxBkB,CAyBnB,CAEA,OAAOf,EAAQiB,KAAK,IACrB,CAEqCC,EAAOC,SAC3CpB,EAAWqB,QAAUrB,EACrBmB,EAAOC,QAAUpB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIH,CApDA,iJCFA,MAAMsB,GAAYC,EAAAA,EAAAA,IAAgB,CAChCC,SAAU,CACR,UAAW,CACTC,OAAQ,UACR,WAAY,CACVC,eAAgB,cAGpB,WAAY,CACVC,SAAU,OACVC,WAAY,OACZC,aAAc,QAEhB,aAAc,CACZF,SAAU,OACVG,WAAY,UAEd,iBAAkB,CAChB,eAAgB,CACdC,OAAQ,YAEV,YAAa,CACXH,WAAY,QAEd,2BAA4B,CAC1BI,WAAY,SAOPC,EAAW,IAA6C,IAA5C,MAAEC,EAAK,KAAEC,EAAI,OAAEC,EAAM,KAAEC,EAAI,QAAEC,GAAS,EAE7D,MAAMrC,EAAUqB,IAChB,OAAQ,uBAAKiB,UAAWvC,IAAW,YAAaC,EAAQuB,UAAWgB,QACjE,MAAQC,EAAAA,EAAAA,IAAS,SAASJ,EAAO,GAEjC,qBAAGE,UAAU,SAASL,GACtB,qBAAGK,UAAU,WAAWD,GACxB,uBAAKC,UAAU,eACb,wBAAMA,UAAU,aAAY,MAC5B,wBAAMA,UAAU,UAAUH,GAC1B,wBAAMG,UAAU,aAAY,KAC5B,wBAAMA,UAAU,QAAQJ,IAEtB,EC7CFb,GAAYC,EAAAA,EAAAA,IAAgB,CAChCmB,SAAU,CACRC,MAAO,SAILC,GAAWC,EAAAA,EAAAA,IAAW,KAC1B,MAAM5C,EAAUqB,IAChB,OACE,gBAAC,KAAW,CAAEwB,MAAOC,EAAYC,OAAQC,GACvC,uBAAKV,UAAWtC,EAAQyC,UACpBO,EAAKC,OAAOC,MAAMC,KAAI,QAAC,KAAEC,GAAM,SAAM,gBAACpB,EAAQ,CAC9CC,MAAOmB,EAAKC,YAAYpB,MACxBC,KAAMkB,EAAKC,YAAYnB,KACvBC,OAAQiB,EAAKC,YAAYlB,OACzBC,KAAMgB,EAAKC,YAAYjB,KACvBC,QAASe,EAAKf,SACd,MAED,IAIHS,EAAU,aAkBhB","sources":["webpack://chun-hao-lai/./node_modules/classnames/index.js","webpack://chun-hao-lai/./src/components/post-card.js","webpack://chun-hao-lai/./src/pages/blog.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport classNames from \"classnames\";\r\nimport { navigate } from \"gatsby\";\r\n\r\nconst useStyles = createUseStyles({\r\n  postCard: {\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      '& .title': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n    '& .title': {\r\n      fontSize: '2rem',\r\n      fontWeight: 'bold',\r\n      marginBottom: '1rem',\r\n    },\r\n    '& .excerpt': {\r\n      fontSize: '1rem',\r\n      lineHeight: '1.5rem',\r\n    },\r\n    '& .author-info': {\r\n      '& .separator': {\r\n        margin: '0 0.5rem',\r\n      },\r\n      '& .author': {\r\n        fontWeight: 'bold',\r\n      },\r\n      '& .separator:first-child': {\r\n        marginLeft: '0',\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n\r\nexport const PostCard = ({ title, date, author, slug, excerpt }) => {\r\n\r\n  const classes = useStyles();\r\n  return (<div className={classNames(\"post-card\", classes.postCard)} onClick={\r\n    () => { navigate(`/blog/${slug}`) }\r\n  }>\r\n    <p className=\"title\">{title}</p>\r\n    <p className=\"excerpt\">{excerpt}</p>\r\n    <div className=\"author-info\">\r\n      <span className=\"separator\">By</span>\r\n      <span className=\"author\">{author}</span>\r\n      <span className=\"separator\">|</span>\r\n      <span className=\"date\">{date}</span>\r\n    </div>\r\n  </div>\r\n)\r\n}\r\n","import * as React from \"react\"\r\nimport { graphql, StaticQuery } from \"gatsby\";\r\nimport { withLayout } from \"../components/layout.js\";\r\nimport { PostCard } from \"../components/post-card.js\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  blogPage: {\r\n    width: '40%',\r\n  },\r\n});\r\n\r\nconst BlogPage = withLayout(() => {\r\n  const classes = useStyles();\r\n  return (\r\n    <StaticQuery  query={indexQuery} render={data => (\r\n      <div className={classes.blogPage}>\r\n        {(data.allMdx.edges.map(({ node }) => (<PostCard\r\n          title={node.frontmatter.title}\r\n          date={node.frontmatter.date}\r\n          author={node.frontmatter.author}\r\n          slug={node.frontmatter.slug}\r\n          excerpt={node.excerpt}\r\n        />)))}\r\n      </div>\r\n    )} />  \r\n  );\r\n})\r\n\r\nconst indexQuery = graphql`\r\nquery MyQuery {\r\n  allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\r\n    edges {\r\n      node {\r\n        id\r\n        frontmatter {\r\n          author\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          slug\r\n        }\r\n        excerpt\r\n      }}\r\n  }\r\n}\r\n  `;\r\n\r\nexport default BlogPage\r\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","useStyles","createUseStyles","postCard","cursor","textDecoration","fontSize","fontWeight","marginBottom","lineHeight","margin","marginLeft","PostCard","title","date","author","slug","excerpt","className","onClick","navigate","blogPage","width","BlogPage","withLayout","query","indexQuery","render","data","allMdx","edges","map","node","frontmatter"],"sourceRoot":""}