{"version":3,"file":"component---src-templates-post-js-content-file-path-src-posts-firstpost-md-3eadf38bd022a07f1e1d.js","mappings":"4KAiCO,MAAMA,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBC,GAC/B,MAAMC,EAAoB,aAAiBH,GAG3C,OAAO,WAAc,IAEO,mBAAfE,EACFA,EAAWC,GAGb,IAAIA,KAAsBD,IAChC,CAACC,EAAmBD,GACzB,CAGA,MAAME,EAAc,CAAC,EAQd,SAASC,GAAY,WAACH,EAAU,SAAEI,EAAQ,qBAAEC,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfL,EACHA,EAAW,CAAC,GACZA,GAAcE,EAEJH,EAAiBC,GAG5B,gBACLF,EAAWS,SACX,CAACC,MAAOF,GACRF,EAEJ,CCxGA,SAASK,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,MACHC,IAAsBN,EAAMV,YAC/B,OAAOiB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,kEAAmE,KAAMG,EAAAA,cAAoBN,EAAYI,GAAI,KAAM,iBAC/M,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,EAAGG,IAAsBN,EAAMV,YAC3E,OAAOmB,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCPA,MAAMU,EAAa,CACjBC,K,QAAIA,IAEAC,GAAeC,EAAAA,EAAAA,IAAWC,IAAsB,IAArB,KAACC,EAAI,SAAErB,GAAS,EAC/C,OAAOa,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,KAAM,KAAMQ,EAAKC,IAAIC,YAAYC,OAAQX,EAAAA,cAAoBd,EAAa,CAC7IH,WAAYoB,GACXhB,GAAU,IAGA,SAASyB,EAAiBnB,GACvC,OAAOO,EAAAA,cAAoBK,EAAcZ,EAAOO,EAAAA,cAAoBa,EAAqBpB,GAC3F,C","sources":["webpack://chun-hao-lai/./node_modules/@mdx-js/react/lib/index.js","webpack://chun-hao-lai/./src/posts/firstpost.md","webpack://chun-hao-lai/./src/templates/post.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This article will show you how to acquire a domain from Azure.\"), \"\\n\", React.createElement(_components.h2, null, \"Prerequisites\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Blogger/chun-hao-lai/src/posts/firstpost.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {withLayout} from \"../components/layout\";\nimport {Link} from \"gatsby\";\nconst shortcodes = {\n  Link\n};\nconst PageTemplate = withLayout(({data, children}) => {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children));\n});\nPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["MDXContext","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","allComponents","Provider","value","_createMdxContent","props","_components","Object","assign","p","h2","_provideComponents","React","wrapper","MDXLayout","shortcodes","Link","PageTemplate","withLayout","_ref","data","mdx","frontmatter","title","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}